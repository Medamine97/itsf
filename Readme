# 1. Créer le cluster
kind create cluster --name devops-exercise

# 2. Build et charger l'image RISF
docker build -f Dockerfile-risf -t risf-service:latest .
kind load docker-image risf-service:latest --name devops-exercise

# 3. Déployer les services
kubectl apply -f risf-deployment.yaml
kubectl apply -f itsf-deployment.yaml

# 4. Installer Ingress Controller
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=90s

# 5. Créer les certificats et déployer l'Ingress
- Créer une CA
openssl genrsa -out ca.key 2048
openssl req -new -x509 -days 365 -key ca.key -out ca.crt -subj "/CN=Local-CA"

- Certificat pour hello-risf.local.domain
openssl genrsa -out risf.key 2048
openssl req -new -key risf.key -out risf.csr -subj "/CN=hello-risf.local.domain"
openssl x509 -req -in risf.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out risf.crt -days 365

- Certificat pour hello-itsf.local.domain
openssl genrsa -out itsf.key 2048
openssl req -new -key itsf.key -out itsf.csr -subj "/CN=hello-itsf.local.domain"
openssl x509 -req -in itsf.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out itsf.crt -days 365

- Créer les secrets TLS
kubectl create secret tls risf-tls --cert=risf.crt --key=risf.key
kubectl create secret tls itsf-tls --cert=itsf.crt --key=itsf.key

kubectl apply -f ingress.yaml

# 6. Ajouter au /etc/hosts
echo "127.0.0.1 hello-risf.local.domain hello-itsf.local.domain" | sudo tee -a /etc/hosts

# 7. Test 
- HTTP
curl http://hello-risf.local.domain
curl http://hello-itsf.local.domain

- HTTPS (ignorer les certificats auto-signés)
curl -k https://hello-risf.local.domain
curl -k https://hello-itsf.local.domain

- Vérifier les pods
kubectl get pods
kubectl get services
kubectl get ingress
